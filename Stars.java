
public class Stars {

	public static void main(String[] args) {
		int totalLevel = 10;
		for(int i = 1;i <= totalLevel; i++) {//i变量控制行
			//若要打印正金字塔需要先打印空格 再用一个循环变量 K 来是实现打印空格
		/*        *      第一行一个* 2*1-1     第1行空格有4空格  总层数-1    
		 *       ***     第一行一个* 2*2-1     第1行空格有3空格  总层数-2
		 *      *****    第一行一个* 2*3-1     第1行空格有2空格  总层数-3
		 *     *******   第一行一个* 2*4-1     第1行空格有1空格  总层数-4
		 *    *********  第一行一个* 2*5-1     第1行空格有0空格  总层数-5
		 * */	
			for(int k = 1;k <= totalLevel-i;k++) {
				System.out.print(" ");//这一步就可以将空格打印正金字*前面的塔空格
			}
			
			for(int j = 1;j <= 2*i-1; j++ ) { //j控制*和空格的输出
				//此处代码为了控制行的*打印 是一个斜的金字塔
               //将j<=i 改成 j<=2*i-1即可打印正金字塔星星（*）
				
//				4. 打印空心的金字塔 [最难的 很不容易想到的]
		/*				*      第 1 层 有 1 个* 当前行的第一个位置是*,最后一个位置也是*
					   * *     第 2 层 有 2 个* 当前行的第一个位置是*,最后一个位置也是*
					  *   *    第 3 层 有 2 个* 当前行的第一个位置是*,最后一个位置也是*
					 *     *   第 4 层 有 2 个* 当前行的第一个位置是*,最后一个位置也是*
				    *********  第 5 层 有 9 个* 全部输出*
		  我的理解就是如何打印用j控制变量来打印每行的*和空格 找到规律 一切问题迎刃而解 
		* 此处是是需要打印正空心金字塔 需要判断打印* 和打印正金字塔中间的空格 
		* 也即是需要if...else语句来判断打印*和打印空格
		* 每层的第一个位置即j = 1 或者最后一个位置 j =  2 * i - 1 打印* 其余都打印空格
		* 最后一行是没有任何该改变的需要全部打印出来 
		* 即控制变量 i = 5（总层数） 时（意思是最后一行不需要空格 全部打印*）
		*也要通条件判断来实现需求  
		*/		if(j == 1 || j == 2*i-1 || i == totalLevel) {//在正金字塔的基础上第一个位置和最后一个位置打印空格 
				System.out.print("*");
				}else {//其他情况打印空格
					System.out.print(" ");
				}
			}
			System.out.println("");//这只是打印5行的空心金字塔 
			   //  若要打印更多的需要将代码做活即将i用变量的表示  
			//可以换成任意层数  int totalLevel = 10
		}

	}

}
